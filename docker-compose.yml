version: '3.8'

services:
  # Serviço do Banco de Dados (PostgreSQL)
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: meu_banco
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: senha
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Serviço do Backend (Django)
  backend:
    build:
      context: ./backend  # Diretório do backend (Django)
    command: gunicorn meu_projeto.wsgi:application --bind 0.0.0.0:8000 --timeout 120
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    networks:
      - app-network
    environment:
      - DATABASE_URL=postgres://usuario:senha@db:5432/meu_banco
      - REDIS_URL=redis://redis:6379

  # Serviço do Frontend (React)
  frontend:
    build:
      context: ./frontend  # Diretório do frontend (React)
    command: npm start
    volumes:
      - ./frontend:/app
      - ./frontend/build:/app/build  # Mapear o diretório build para servir os arquivos estáticos
    depends_on:
      - backend
    networks:
      - app-network
    ports:
      - "3000:3000"

  # Serviço do Redis (Cache)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Serviço do Nginx (Proxy reverso)
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres_data:
  media_volume:

networks:
  app-network:
    driver: bridge
